package com.crossover.command;

import java.io.File;
import java.util.List;
import java.util.Map;

import org.apache.commons.fileupload.FileItem;
import org.apache.commons.fileupload.FileUploadException;
import org.apache.commons.fileupload.disk.DiskFileItemFactory;
import org.apache.commons.fileupload.servlet.ServletFileUpload;
import org.apache.log4j.Logger;

import com.compile.service.CompilerService;
import com.crossover.util.PropertiesUtil;

public class UploadFileAction extends ActionCommand {

	Logger logger = Logger.getLogger(DownloadFileAction.class);
	
	@Override
	public void execute() {
		String os = System.getProperty("os.name").toLowerCase();
		String workPath = "";
		if(os.indexOf("win") >= 0){
			workPath = this.getResource().getProperty("work.config." + "windows");
		}else{
			workPath = this.getResource().getProperty("work.config." + "linux");
		}

		PropertiesUtil prop = new PropertiesUtil(workPath + File.separator + "config", "config.properties");
		
		DiskFileItemFactory factory = new DiskFileItemFactory();
		String path = prop.getValue("upload.file");
		File repository = new File(path + File.separator + "tmp");
		factory.setRepository(repository);
		
		// Create a new file upload handler
		ServletFileUpload upload = new ServletFileUpload(factory);
		
		// Parse the request
		List<FileItem> items;

		try {
			items = upload.parseRequest(this.getRequest());
			for(FileItem item : items){
				String fileName = new File(item.getName()).getName();
				String filePath = path + File.separator + "files" + File.separator + fileName;
				File storeFile = new File(filePath);
				storeFile.getParentFile().mkdirs();
				// saves the file on disk
				item.write(storeFile);
				CompilerService service = new CompilerService();
				com.compile.service.Compiler compiler = service.getCompilerPort();
				javax.xml.ws.BindingProvider bp = (javax.xml.ws.BindingProvider) compiler;
				Map<String, Object> c = bp.getRequestContext();
				c.put(javax.xml.ws.BindingProvider.ENDPOINT_ADDRESS_PROPERTY, config.getValue("url.service.compile"));
				com.compile.service.CompileResult result = compiler.execute(path + File.separator + "files", fileName);
			}
		} catch (FileUploadException e) {
			e.printStackTrace();
		} catch (Exception e) {
			e.printStackTrace();
		}
		this.forward("/WEB-INF/jsp/upload.jsp");

	}

}
